syntax = "proto3";

package server;

option go_package = "tctxto/server";

service TicTacToe {
    rpc Exchange(ExchangeRequest) returns (ExchangeReply) {}

    rpc Subscribe(Empty) returns (stream SubscriptionUpdate) {}

    rpc Handshake(HandshakeRequest) returns (Empty) {}
    rpc Invalidate(Empty) returns (Empty) {}
    
    rpc CreateLobby(CreateLobbyRequest) returns (Empty) {}
    rpc JoinLobby(JoinLobbyRequest) returns (Empty) {}
    rpc LeaveMyLobby(Empty) returns (Empty) {}

    rpc CreateGame(CreateGameRequest) returns (Empty) {}
    rpc MakeMove(MakeMoveRequest) returns (Empty) {}
}

message SubscriptionUpdateData {
    oneof subscription_update_data_type {
        NavigationUpdate navigation_update = 1;

        HandshakeReply handshake_reply = 2;
        InvalidateReply invalidate_reply = 3;

        CreateLobbyReply create_lobby_reply = 4;
        JoinLobbyReply join_lobby_reply = 5;
        LeaveMyLobbyReply leave_my_lobby_reply = 6;
        MyLobbyDetails my_lobby_details = 7;
        MyLobbyJoinerUpdate my_lobby_joiner_update = 8;
        MyLobbyLeaverUpdate my_lobby_leaver_update = 9;

        CreateGameReply create_game_reply = 10;
        MakeMoveReply make_move_reply = 11;
        MoveUpdate move_update = 12;
        WinnerUpdate winner_update = 13;
        DrawUpdate draw_update = 14;
        GameStartUpdate game_start_update = 15;
        NextMoverUpdate next_mover_update = 16;

        PlayerClientUpdate player_client_update = 17;
    }
}

message Empty { 
}

message Outcome {
    bool ok = 1;
    int32 error_code = 2;
    string error_message = 3;
}

message Lobby {
    string name = 1;
    repeated Player players = 2;
}

message Player {
    string id = 1;
    string name = 2;
}

message ExchangeRequest {
    string public_key = 1;
}

message ExchangeReply {
    string client_id = 1;
}

message MyLobbyDetails {
    Lobby lobby = 1;
}

message MyLobbyJoinerUpdate {
    Player player = 1;
}

message MyLobbyLeaverUpdate {
    Player player = 1;
}

message LeaveMyLobbyReply {
    Outcome outcome = 1;
}

message JoinLobbyRequest {
    string lobby_id = 1;
}

message JoinLobbyReply {
    Outcome outcome = 1;
}

message InvalidateReply {
    Outcome outcome = 1;
}

message SubscriptionUpdate {
    SubscriptionUpdateData data  = 1;
}

message HandshakeRequest {
    string player_name = 1;
    string player_pass = 2;
}

message HandshakeReply {
    Outcome outcome = 1;
}

message NavigationUpdate {
    NavigationPath path = 1;
}

message Move {
    Mover mover = 1;
    int32 position = 2;
}

message MoveUpdate {
    Move move = 1;
}

message NextMoverUpdate {
    Mover mover = 1;
}

message MakeMoveRequest {
    int32 position = 1;
}

message MakeMoveReply {
    Outcome outcome = 1;
}

message CreateLobbyRequest {
    string name = 1;
}

message CreateLobbyReply {
    Outcome outcome = 1;
}

message CreateGameRequest {
    string player1_id = 1;
    string player2_id = 2;
}

message CreateGameReply {
    Outcome outcome = 1;
}

message WinnerUpdate {
    Winner winner = 1;
    Mover mover = 2;
}

message DrawUpdate {
}

message GameStartUpdate {
    Mover you = 1;
    Mover other = 2;
}

message PlayerClientUpdate {
    string message = 1;
}

enum NavigationPath {
    LOGIN = 0;
    HOME = 1;
    MY_LOBBY = 2;
    GAME = 3;
}

enum Mover {
    UNSPECIFIED = 0;
    X = 1;
    O = 2;
}

enum Winner {
    you = 0;
    other = 1;
}